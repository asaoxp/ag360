import React, { useState, useEffect, useRef, useCallback } from 'react';

const VoiceAssistant = ({ onNavigate }) => {
  const [isListening, setIsListening] = useState(false);
  const [transcript, setTranscript] = useState('');
  const [response, setResponse] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);
  const recognitionRef = useRef(null);

  // Navigation keywords mapping (Kannada)
  const navigationKeywords = {
    '‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø': 'home',
    '‡≤π‡≥ã‡≤Æ‡≥ç': 'home',
    '‡≤®‡≥Ä‡≤∞‡≥Å': 'irrigation',
    '‡≤∏‡≤ø‡≤Ç‡≤™‡≤°‡≤ø‡≤∏‡≥Å‡≤µ‡≤ø‡≤ï‡≥Ü': 'irrigation',
    '‡≤∏‡≥Ü‡≤®‡≥ç‡≤∏‡≤æ‡≤∞‡≥ç': 'sensors',
    '‡≤Æ‡≤æ‡≤™‡≤®': 'sensors',
    '‡≤∞‡≥ã‡≤ó': 'disease-detection',
    '‡≤¨‡≤≥‡≥Ü': 'disease-detection',
    '‡≤ó‡≤ø‡≤°': 'plant-info',
    '‡≤∏‡≤∏‡≥ç‡≤Ø': 'plant-info',
    '‡≤®‡≤®‡≥ç‡≤® ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞': 'my-farm',
    '‡≤Æ‡≥à ‡≤´‡≤æ‡≤∞‡≥ç‡≤Æ‡≥ç': 'my-farm',
    '‡≤ß‡≥ç‡≤µ‡≤®‡≤ø': 'voice-assistant',
    '‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï': 'voice-assistant',
    '‡≤∏‡≥Ü‡≤ü‡≥ç‡≤ü‡≤ø‡≤Ç‡≤ó‡≥ç': 'settings',
    '‡≤∏‡≥Ü‡≤ü‡≥ç‡≤ü‡≤ø‡≤Ç‡≤ó‡≥ç‡≤∏‡≥ç': 'settings',
    '‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü': 'about',
    '‡≤Ö‡≤¨‡≥å‡≤ü‡≥ç': 'about'
  };

  useEffect(() => {
    // Initialize speech recognition
    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
      recognitionRef.current = new SpeechRecognition();
      recognitionRef.current.continuous = false;
      recognitionRef.current.interimResults = false;
      recognitionRef.current.lang = 'kn-IN'; // Kannada

      recognitionRef.current.onstart = () => {
        setIsListening(true);
        setResponse('‡≤ï‡≥á‡≤≥‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥ç‡≤¶‡≥á‡≤®‡≥Ü... ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤Æ‡≤æ‡≤§‡≤®‡≤æ‡≤°‡≤ø');
      };

      recognitionRef.current.onresult = (event) => {
        const speechResult = event.results[0][0].transcript;
        setTranscript(speechResult);
        processVoiceInput(speechResult);
      };

      recognitionRef.current.onend = () => {
        setIsListening(false);
      };

      recognitionRef.current.onerror = (event) => {
        console.error('Speech recognition error:', event.error);
        setIsListening(false);
        setResponse('‡≤¶‡≥ã‡≤∑ ‡≤∏‡≤Ç‡≤≠‡≤µ‡≤ø‡≤∏‡≤ø‡≤¶‡≥Ü. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Ü ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø.');
      };
    }

    return () => {
      if (recognitionRef.current) {
        recognitionRef.current.stop();
      }
    };
  }, []);

  const processVoiceInput = useCallback(async (input) => {
    setIsProcessing(true);
    try {
      const lowerInput = input.toLowerCase();

      // Check for navigation commands
      for (const [keyword, page] of Object.entries(navigationKeywords)) {
        if (lowerInput.includes(keyword.toLowerCase())) {
          // Navigate to the page
          if (onNavigate) {
            onNavigate(page);
          }

          // Set response in Kannada
          const pageNames = {
            'home': '‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø ‡≤™‡≥Å‡≤ü',
            'irrigation': '‡≤®‡≥Ä‡≤∞‡≥Å ‡≤®‡≤ø‡≤∞‡≥ç‡≤µ‡≤π‡≤£‡≥Ü',
            'sensors': '‡≤∏‡≥Ü‡≤®‡≥ç‡≤∏‡≤æ‡≤∞‡≥ç ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø',
            'disease-detection': '‡≤∞‡≥ã‡≤ó ‡≤™‡≤§‡≥ç‡≤§‡≥Ü',
            'plant-info': '‡≤ó‡≤ø‡≤° ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø',
            'my-farm': '‡≤®‡≤®‡≥ç‡≤® ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞',
            'voice-assistant': '‡≤ß‡≥ç‡≤µ‡≤®‡≤ø ‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï',
            'settings': '‡≤∏‡≥Ü‡≤ü‡≥ç‡≤ü‡≤ø‡≤Ç‡≤ó‡≥ç‚Äå‡≤ó‡≤≥‡≥Å',
            'about': '‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü'
          };

          setResponse(`${pageNames[page] || page} ‡≤™‡≥Å‡≤ü‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤®‡≥ç‡≤Ø‡≤æ‡≤µ‡≤ø‡≤ó‡≥á‡≤ü‡≥ç ‡≤Æ‡≤æ‡≤°‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.`);
          setIsProcessing(false);
          return;
        }
      }

      // Handle other queries
      if (lowerInput.includes('‡≤®‡≥Ä‡≤∞‡≥Å') || lowerInput.includes('‡≤∏‡≤ø‡≤Ç‡≤™‡≤°‡≤ø‡≤∏‡≥Å‡≤µ‡≤ø‡≤ï‡≥Ü')) {
        setResponse('‡≤®‡≥Ä‡≤∞‡≥Å ‡≤®‡≤ø‡≤∞‡≥ç‡≤µ‡≤π‡≤£‡≥Ü‡≤ó‡≤æ‡≤ó‡≤ø ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞‡≤¶ ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≥ã‡≤°‡≤ø. ‡≤∏‡≤∞‡≤æ‡≤∏‡≤∞‡≤ø ‡≤Ü‡≤µ‡≤∂‡≥ç‡≤Ø‡≤ï‡≤§‡≥Ü‡≤Ø‡≥Å ‡≤¶‡≤ø‡≤®‡≤ï‡≥ç‡≤ï‡≥Ü 5-7 ‡≤≤‡≥Ä‡≤ü‡≤∞‡≥ç ‡≤™‡≥ç‡≤∞‡≤§‡≤ø ‡≤ó‡≤ø‡≤°.');
      } else if (lowerInput.includes('‡≤∞‡≥ã‡≤ó') || lowerInput.includes('‡≤¨‡≤≥‡≥Ü')) {
        setResponse('‡≤ó‡≤ø‡≤°‡≤¶ ‡≤∞‡≥ã‡≤ó ‡≤™‡≤§‡≥ç‡≤§‡≥Ü‡≤ó‡≤æ‡≤ó‡≤ø ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤™‡≥ç‚Äå‡≤≤‡≥ã‡≤°‡≥ç ‡≤Æ‡≤æ‡≤°‡≤ø ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤∞‡≥ã‡≤ó‡≤¶ ‡≤≤‡≤ï‡≥ç‡≤∑‡≤£‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤µ‡≤ø‡≤µ‡≤∞‡≤ø‡≤∏‡≤ø.');
      } else if (lowerInput.includes('‡≤∏‡≥Ü‡≤®‡≥ç‡≤∏‡≤æ‡≤∞‡≥ç') || lowerInput.includes('‡≤Æ‡≤æ‡≤™‡≤®')) {
        setResponse('‡≤∏‡≥Ü‡≤®‡≥ç‡≤∏‡≤æ‡≤∞‡≥ç ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤Ø‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤°‡≥ç‡≤Ø‡≤æ‡≤∂‡≥ç‚Äå‡≤¨‡≥ã‡≤∞‡≥ç‡≤°‡≥ç‚Äå‡≤®‡≤≤‡≥ç‡≤≤‡≤ø ‡≤≤‡≤≠‡≥ç‡≤Ø. ‡≤Æ‡≤£‡≥ç‡≤£‡≤ø‡≤® ‡≤§‡≥á‡≤µ‡≤æ‡≤Ç‡≤∂ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤§‡≤æ‡≤™‡≤Æ‡≤æ‡≤®‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Æ‡≥á‡≤≤‡≥ç‡≤µ‡≤ø‡≤ö‡≤æ‡≤∞‡≤£‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø.');
      } else if (lowerInput.includes('‡≤ó‡≤ø‡≤°') || lowerInput.includes('‡≤∏‡≤∏‡≥ç‡≤Ø')) {
        setResponse('‡≤ó‡≤ø‡≤° ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø ‡≤µ‡≤ø‡≤≠‡≤æ‡≤ó‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤µ‡≤ø‡≤µ‡≤ø‡≤ß ‡≤¨‡≥Ü‡≤≥‡≥Ü‡≤ó‡≤≥ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø ‡≤™‡≤°‡≥Ü‡≤Ø‡≤¨‡≤π‡≥Å‡≤¶‡≥Å.');
      } else {
        setResponse('‡≤®‡≤Æ‡≤∏‡≥ç‡≤ï‡≤æ‡≤∞! ‡≤®‡≤æ‡≤®‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï. ‡≤®‡≥Ä‡≤∞‡≥Å ‡≤®‡≤ø‡≤∞‡≥ç‡≤µ‡≤π‡≤£‡≥Ü, ‡≤∞‡≥ã‡≤ó ‡≤™‡≤§‡≥ç‡≤§‡≥Ü, ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤á‡≤§‡≤∞ ‡≤ï‡≥É‡≤∑‡≤ø ‡≤∏‡≤Ç‡≤¨‡≤Ç‡≤ß‡≤ø‡≤§ ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤ó‡≤æ‡≤ó‡≤ø ‡≤ï‡≥á‡≤≥‡≤ø.');
      }

    } catch (error) {
      console.error('Error processing voice input:', error);
      setResponse('‡≤ï‡≥ç‡≤∑‡≤Æ‡≤ø‡≤∏‡≤ø, ‡≤¶‡≥ã‡≤∑ ‡≤∏‡≤Ç‡≤≠‡≤µ‡≤ø‡≤∏‡≤ø‡≤¶‡≥Ü. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Ü ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø.');
    }
    setIsProcessing(false);
  }, [onNavigate]);

  const startListening = () => {
    if (recognitionRef.current && !isListening) {
      recognitionRef.current.start();
    }
  };

  const stopListening = () => {
    if (recognitionRef.current && isListening) {
      recognitionRef.current.stop();
    }
  };

  return (
    <div className="voice-assistant-container" style={{
      maxWidth: '600px',
      margin: '0 auto',
      padding: '20px',
      backgroundColor: '#f8f9fa',
      borderRadius: '10px',
      boxShadow: '0 2px 10px rgba(0,0,0,0.1)'
    }}>
      <h2 style={{ color: '#2c5530', marginBottom: '20px', textAlign: 'center' }}>
        ‡≤ß‡≥ç‡≤µ‡≤®‡≤ø ‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï (Voice Assistant)
      </h2>

      <div style={{ textAlign: 'center', marginBottom: '30px' }}>
        <button
          onClick={isListening ? stopListening : startListening}
          disabled={isProcessing}
          style={{
            backgroundColor: isListening ? '#dc3545' : '#2c5530',
            color: 'white',
            border: 'none',
            padding: '15px 30px',
            borderRadius: '50px',
            fontSize: '18px',
            cursor: 'pointer',
            transition: 'all 0.3s ease',
            boxShadow: '0 4px 15px rgba(44, 85, 48, 0.3)'
          }}
        >
          {isListening ? 'üõë ‡≤®‡≤ø‡≤≤‡≥ç‡≤≤‡≤ø‡≤∏‡≤ø' : 'üé§ ‡≤Æ‡≤æ‡≤§‡≤®‡≤æ‡≤°‡≤ø'}
        </button>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <h3 style={{ color: '#2c5530', marginBottom: '10px' }}>‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤Æ‡≤æ‡≤§‡≥Å:</h3>
        <div style={{
          padding: '15px',
          backgroundColor: 'white',
          borderRadius: '8px',
          border: '1px solid #ddd',
          minHeight: '50px',
          fontSize: '16px'
        }}>
          {transcript || '‡≤Æ‡≤æ‡≤§‡≤®‡≤æ‡≤°‡≤≤‡≥Å ‡≤¨‡≤ü‡≤®‡≥ç ‡≤í‡≤§‡≥ç‡≤§‡≤ø...'}
        </div>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <h3 style={{ color: '#2c5530', marginBottom: '10px' }}>‡≤â‡≤§‡≥ç‡≤§‡≤∞:</h3>
        <div style={{
          padding: '15px',
          backgroundColor: 'white',
          borderRadius: '8px',
          border: '1px solid #ddd',
          minHeight: '50px',
          fontSize: '16px'
        }}>
          {response || '‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤á‡≤≤‡≥ç‡≤≤‡≤ø ‡≤ï‡≤æ‡≤£‡≤ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü...'}
        </div>
      </div>

      {isProcessing && (
        <div style={{
          textAlign: 'center',
          color: '#2c5530',
          fontWeight: 'bold',
          marginTop: '20px'
        }}>
          ‡≤∏‡≤Ç‡≤∏‡≥ç‡≤ï‡≤∞‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥Ü...
        </div>
      )}

      <div style={{
        marginTop: '30px',
        padding: '15px',
        backgroundColor: '#e8f5e8',
        borderRadius: '8px',
        fontSize: '14px'
      }}>
        <h4 style={{ color: '#2c5530', marginBottom: '10px' }}>‡≤®‡≥ç‡≤Ø‡≤æ‡≤µ‡≤ø‡≤ó‡≥á‡≤∑‡≤®‡≥ç ‡≤ï‡≤Æ‡≤æ‡≤Ç‡≤°‡≥ç‚Äå‡≤ó‡≤≥‡≥Å:</h4>
        <ul style={{ listStyle: 'none', padding: 0 }}>
          <li>‚Ä¢ "‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø" - ‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø ‡≤™‡≥Å‡≤ü</li>
          <li>‚Ä¢ "‡≤®‡≥Ä‡≤∞‡≥Å" - ‡≤®‡≥Ä‡≤∞‡≥Å ‡≤®‡≤ø‡≤∞‡≥ç‡≤µ‡≤π‡≤£‡≥Ü</li>
          <li>‚Ä¢ "‡≤∏‡≥Ü‡≤®‡≥ç‡≤∏‡≤æ‡≤∞‡≥ç" - ‡≤∏‡≥Ü‡≤®‡≥ç‡≤∏‡≤æ‡≤∞‡≥ç ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø</li>
          <li>‚Ä¢ "‡≤∞‡≥ã‡≤ó" - ‡≤∞‡≥ã‡≤ó ‡≤™‡≤§‡≥ç‡≤§‡≥Ü</li>
          <li>‚Ä¢ "‡≤ó‡≤ø‡≤°" - ‡≤ó‡≤ø‡≤° ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø</li>
          <li>‚Ä¢ "‡≤®‡≤®‡≥ç‡≤® ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞" - ‡≤®‡≤®‡≥ç‡≤® ‡≤ï‡≥ç‡≤∑‡≥á‡≤§‡≥ç‡≤∞</li>
        </ul>
      </div>
    </div>
  );
};

export default VoiceAssistant;